# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `SPDZ.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module SPDZ
_M_SPDZ = Ice.openModule('SPDZ')
__name__ = 'SPDZ'

_M_SPDZ._t_Node = IcePy.defineValue('::SPDZ::Node', Ice.Value, -1, (), False, True, None, ())

if 'NodePrx' not in _M_SPDZ.__dict__:
    _M_SPDZ.NodePrx = Ice.createTempClass()
    class NodePrx(Ice.ObjectPrx):

        def sendShares(self, shareValue, shareMac, context=None):
            return _M_SPDZ.Node._op_sendShares.invoke(self, ((shareValue, shareMac), context))

        def sendSharesAsync(self, shareValue, shareMac, context=None):
            return _M_SPDZ.Node._op_sendShares.invokeAsync(self, ((shareValue, shareMac), context))

        def begin_sendShares(self, shareValue, shareMac, _response=None, _ex=None, _sent=None, context=None):
            return _M_SPDZ.Node._op_sendShares.begin(self, ((shareValue, shareMac), _response, _ex, _sent, context))

        def end_sendShares(self, _r):
            return _M_SPDZ.Node._op_sendShares.end(self, _r)

        def computeSum(self, context=None):
            return _M_SPDZ.Node._op_computeSum.invoke(self, ((), context))

        def computeSumAsync(self, context=None):
            return _M_SPDZ.Node._op_computeSum.invokeAsync(self, ((), context))

        def begin_computeSum(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_SPDZ.Node._op_computeSum.begin(self, ((), _response, _ex, _sent, context))

        def end_computeSum(self, _r):
            return _M_SPDZ.Node._op_computeSum.end(self, _r)

        def revealSum(self, context=None):
            return _M_SPDZ.Node._op_revealSum.invoke(self, ((), context))

        def revealSumAsync(self, context=None):
            return _M_SPDZ.Node._op_revealSum.invokeAsync(self, ((), context))

        def begin_revealSum(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_SPDZ.Node._op_revealSum.begin(self, ((), _response, _ex, _sent, context))

        def end_revealSum(self, _r):
            return _M_SPDZ.Node._op_revealSum.end(self, _r)

        def receiveResult(self, sum, mac, context=None):
            return _M_SPDZ.Node._op_receiveResult.invoke(self, ((sum, mac), context))

        def receiveResultAsync(self, sum, mac, context=None):
            return _M_SPDZ.Node._op_receiveResult.invokeAsync(self, ((sum, mac), context))

        def begin_receiveResult(self, sum, mac, _response=None, _ex=None, _sent=None, context=None):
            return _M_SPDZ.Node._op_receiveResult.begin(self, ((sum, mac), _response, _ex, _sent, context))

        def end_receiveResult(self, _r):
            return _M_SPDZ.Node._op_receiveResult.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_SPDZ.NodePrx.ice_checkedCast(proxy, '::SPDZ::Node', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_SPDZ.NodePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::SPDZ::Node'
    _M_SPDZ._t_NodePrx = IcePy.defineProxy('::SPDZ::Node', NodePrx)

    _M_SPDZ.NodePrx = NodePrx
    del NodePrx

    _M_SPDZ.Node = Ice.createTempClass()
    class Node(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::SPDZ::Node')

        def ice_id(self, current=None):
            return '::SPDZ::Node'

        @staticmethod
        def ice_staticId():
            return '::SPDZ::Node'

        def sendShares(self, shareValue, shareMac, current=None):
            raise NotImplementedError("servant method 'sendShares' not implemented")

        def computeSum(self, current=None):
            raise NotImplementedError("servant method 'computeSum' not implemented")

        def revealSum(self, current=None):
            raise NotImplementedError("servant method 'revealSum' not implemented")

        def receiveResult(self, sum, mac, current=None):
            raise NotImplementedError("servant method 'receiveResult' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_SPDZ._t_NodeDisp)

        __repr__ = __str__

    _M_SPDZ._t_NodeDisp = IcePy.defineClass('::SPDZ::Node', Node, (), None, ())
    Node._ice_type = _M_SPDZ._t_NodeDisp

    Node._op_sendShares = IcePy.Operation('sendShares', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_int, False, 0)), (), None, ())
    Node._op_computeSum = IcePy.Operation('computeSum', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    Node._op_revealSum = IcePy.Operation('revealSum', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), None, ())
    Node._op_receiveResult = IcePy.Operation('receiveResult', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0), ((), IcePy._t_int, False, 0)), (), None, ())

    _M_SPDZ.Node = Node
    del Node

# End of module SPDZ
